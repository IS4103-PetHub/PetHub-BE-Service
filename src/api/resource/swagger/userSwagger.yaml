swagger: "2.0"

definitions:
  FavoriteServiceListing:
    type: object
    properties:
      serviceListingId:
        type: integer
        description: The ID of the favorite service listing.
      title:
        type: string
        description: The title of the favorite service listing.
      description:
        type: string
        description: The description of the favorite service listing.
      basePrice:
        type: number
        description: The base price of the favorite service listing.
      attachmentKeys:
        type: array
        items:
          type: string
          description: An array of attachment keys.
      attachmentURLs:
        type: array
        items:
          type: string
          description: An array of attachment URLs.
      dateCreated:
        type: string
        format: date-time
        description: The date when the favorite service listing was created.
      lastUpdated:
        type: string
        format: date-time
        description: The date of the last update to the favorite service listing (can be null).
      duration:
        type: integer
        description: The duration of the favorite service listing in minutes.
      category:
        type: string
        description: The category of the favorite service listing.
      petBusinessId:
        type: integer
        description: The ID of the pet business associated with the favorite service listing.
      calendarGroupId:
        type: integer
        description: The ID of the calendar group associated with the favorite service listing (can be null).
    example:
      serviceListingId: 5
      title: "Reliable Pet Sitting Service"
      description: "Trustworthy pet sitting services for your beloved pets"
      basePrice: 50.5
      attachmentKeys: []
      attachmentURLs: []
      dateCreated: "2023-09-29T00:28:21.465Z"
      lastUpdated: null
      duration: 60
      category: "VETERINARY"
      petBusinessId: 4
      calendarGroupId: null

  PetOwnerWithFavouritesResponse:
    type: object
    properties:
      firstName:
        type: string
        description: The first name of the pet owner.
      lastName:
        type: string
        description: The last name of the pet owner.
      contactNumber:
        type: string
        description: The contact number of the pet owner.
      dateOfBirth:
        type: string
        format: date-time
        description: The date of birth of the pet owner.
      userId:
        type: integer
        description: The ID of the pet owner.
      favouriteListings:
        type: array
        items:
          type: object
          properties:
            serviceListingId:
              type: integer
              description: The ID of the favorite service listing.
            title:
              type: string
              description: The title of the favorite service listing.
            description:
              type: string
              description: The description of the favorite service listing.
            basePrice:
              type: number
              description: The base price of the favorite service listing.
            attachmentKeys:
              type: array
              items:
                type: string
                description: An array of attachment keys.
            attachmentURLs:
              type: array
              items:
                type: string
                description: An array of attachment URLs.
            dateCreated:
              type: string
              format: date-time
              description: The date when the favorite service listing was created.
            lastUpdated:
              type: string
              format: date-time
              description: The date of the last update to the favorite service listing (can be null).
            duration:
              type: integer
              description: The duration of the favorite service listing in minutes.
            category:
              type: string
              description: The category of the favorite service listing.
            petBusinessId:
              type: integer
              description: The ID of the pet business associated with the favorite service listing.
            calendarGroupId:
              type: integer
              description: The ID of the calendar group associated with the favorite service listing (can be null).
    example:
      firstName: "Li"
      lastName: "Chen"
      contactNumber: "88712892"
      dateOfBirth: "1985-08-20T00:00:00.000Z"
      userId: 9
      favouriteListings:
        - serviceListingId: 3
          title: "Adopt a Pet Today"
          description: "Adopt a Pet Today i."
          basePrice: 0
          attachmentKeys: []
          attachmentURLs: []
          dateCreated: "2023-09-29T00:28:21.455Z"
          lastUpdated: null
          duration: 60
          category: "PET_RETAIL"
          petBusinessId: 5
          calendarGroupId: null

  businessAddresses:
    type: array
    description: A list of businesses addresses for this application.
    items:
      type: object
      required:
        - addressName
        - line1
        - postalCode
      properties:
        addressName:
          type: string
          description: The identifier for this address. This is not a unique property.
        line1:
          type: string
          description: Line 1 of the address.
        line2:
          type: string
          description: The optional line 2 of the address.
        postalCode:
          type: string
          description: The postal code of the address.

  PostInternalUser:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      adminRole:
        type: string
      email:
        type: string
      password:
        type: string
    example:
      firstName: "John1"
      lastName: "Doe1"
      adminRole: "ADMINISTRATOR"
      email: "admin1@example.com"
      password: "password1"

  PostPetBusiness:
    type: object
    properties:
      companyName:
        type: string
      contactNumber:
        type: string
      uen:
        type: string
      email:
        type: string
      password:
        type: string
    example:
      companyName: "abcd company"
      contactNumber: "12345678"
      uen: "12345678X"
      email: "petBusiness65@example.com"
      password: "password1"

  PostPetOwner:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      contactNumber:
        type: string
      dateOfBirth:
        type: string
        format: date-time
      email:
        type: string
      password:
        type: string
    example:
      firstName: "John1"
      lastName: "Doe1"
      contactNumber: "12345678"
      dateOfBirth: "1990-01-15T00:00:00Z"
      email: "petowner@example.com"
      password: "password1"

  UserResponse:
    type: object
    properties:
      userId:
        type: integer
        description: The user ID
      email:
        type: string
        description: The user's email
      accountType:
        type: string
        description: The type of user account
      accountStatus:
        type: string
        description: The account status
      dateCreated:
        type: string
        format: date-time
        description: The date and time when the user was created
      lastUpdated:
        type: string
        format: date-time
        description: The date and time of the last update (can be null)

  PetOwnerResponse:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      contactNumber:
        type: string
      dateOfBirth:
        type: string
        format: date-time
      userId:
        type: integer
      user:
        $ref: "#/definitions/UserResponse"
    example:
      firstName: "John1"
      lastName: "Doe1"
      contactNumber: "12345678"
      dateOfBirth: "1990-01-15T00:00:00Z"
      userId: 1
      user:
        userId: 1
        email: "petowner@example.com"
        accountType: "PET_OWNER"
        accountStatus: "ACTIVE"
        dateCreated: "2023-09-04T10:00:00Z"
        lastUpdated: "2023-09-04T10:30:00Z"

  InternalUserResponse:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      adminRole:
        type: string
      userId:
        type: integer
      user:
        $ref: "#/definitions/UserResponse"
    example:
      firstName: "John1"
      lastName: "Doe1"
      adminRole: "ADMINISTRATOR"
      userId: 1
      user:
        userId: 1
        email: "internaluser@example.com"
        accountType: "INTERNAL_USER"
        accountStatus: "ACTIVE"
        dateCreated: "2023-09-04T10:00:00Z"
        lastUpdated: "2023-09-04T10:30:00Z"

  PetBusinessResponse:
    type: object
    properties:
      companyName:
        type: string
      uen:
        type: string
      businessType:
        type: string
      businessDescription:
        type: string
      contactNumber:
        type: string
      websiteURL:
        type: string
      userId:
        type: integer
      user:
        $ref: "#/definitions/UserResponse"
    example:
      companyName: "ABC Pet Services"
      uen: "12345678X"
      businessType: "Pet Grooming"
      businessDescription: "We provide pet grooming services."
      contactNumber: "98765432"
      websiteURL: "https://www.abcpetservices.com"
      userId: 1
      user:
        userId: 1
        email: "petbusiness@example.com"
        accountType: "PET_BUSINESS"
        accountStatus: "ACTIVE"
        dateCreated: "2023-09-04T10:00:00Z"
        lastUpdated: "2023-09-04T10:30:00Z"

  PutInternalUser:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      adminRole:
        type: string
        enum:
          - MANAGER
          - ADMINISTRATOR
      email:
        type: string
    example:
      firstName: "John1"
      lastName: "Doe1"
      adminRole: "ADMINISTRATOR"
      email: "admin@example.com"

  PutPetOwner:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      contactNumber:
        type: string
      dateOfBirth:
        type: string
        format: date-time
      email:
        type: string
    example:
      firstName: "John1"
      lastName: "Doe1"
      contactNumber: "12345678"
      dateOfBirth: "1990-01-15T00:00:00Z"
      email: "petowner@example.com"

  PutPetBusiness:
    type: object
    properties:
      companyName:
        type: string
      businessType:
        type: string
        enum:
          - FNB
          - SERVICE
          - HEALTHCARE
      businessDescription:
        type: string
      contactNumber:
        type: string
      websiteURL:
        type: string
      email:
        type: string
      businessEmail:
        type: string
        description: The business email address that is displayed to the customer.
      businessAddresses:
        type: array
        items:
          $ref: "#/definitions/BusinessAddress"
    example:
      companyName: "abcd company"
      businessType: "SERVICE"
      businessDescription: "Updated pet service company"
      contactNumber: "98765432"
      websiteURL: "www.updatedabcd.com"
      email: "petbusiness@example.com"
      businessEmail: "example@gmail.com"
      businessAddresses:
        - addressId: 97
          addressName: "existingAddressButModifiedLine1"
          line1: "asdawdawd"
          line2: "asdawdawd"
          postalCode: "asdawdawd"
          petBusinessId: 7
          petBusinessApplicationId: 13
        - addressName: "new address"
          line1: "asdawdawd"
          line2:
          postalCode: "adwawdawdaw"

  post-forget-password:
    type: object
    properties:
      email:
        type: string
    example:
      email: "abc@example.com"

  post-forget-password-response:
    type: object
    properties:
      message:
        type: string
    example:
      message: "Password Reset Email sent successfully"

  post-reset-password-with-token:
    type: object
    properties:
      newPassword:
        type: string
    example:
      newPassword: "password123"

  post-reset-password-response:
    type: object
    properties:
      message:
        type: string
    example:
      message: "Password Reset successfully"

  post-change-password:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
      newPassword:
        type: string
    example:
      email: "abc@example.com"
      password: "password1"
      newPassword: "password123"

  post-change-password-response:
    type: object
    properties:
      message:
        type: string
    example:
      message: "Change Password successfully"

  patch-de-activate-user:
    type: object
    properties:
      password:
        type: string
      description: The user's password for authentication.
    example:
      password: "password1"

paths:
  /api/users:
    get:
      summary: Check API health
      description: Check if the user API is working.
      responses:
        "200":
          description: OK
          schema:
            type: object
            properties:
              message:
                type: string
                description: Status message
      tags:
        - Health

  /api/users/internal-users:
    get:
      summary: Get all internal users.
      description: Retrieve a list of all internal users.
      responses:
        "200":
          description: List of internal users retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/definitions/InternalUserResponse"
      tags:
        - Users
    post:
      summary: Create a new internal user.
      description: Create a new internal user.
      requestBody:
        description: Internal user details.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/PostInternalUser"
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/definitions/UserResponse"
      tags:
        - Users

  /api/users/pet-businesses:
    get:
      summary: Get all pet businesses.
      description: Retrieve a list of all pet businesses.
      responses:
        "200":
          description: List of pet businesses retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/definitions/PetBusinessResponse"
      tags:
        - Users
    post:
      summary: Create a new pet business.
      description: Create a new pet business.
      requestBody:
        description: Pet Business details.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/PostPetBusiness"
      responses:
        "201":
          description: Pet business created successfully
          content:
            application/json:
              schema:
                $ref: "#/definitions/UserResponse"
      tags:
        - Users

  /api/users/pet-owners:
    get:
      summary: Get all pet owners.
      description: Retrieve a list of all pet owners.
      responses:
        "200":
          description: List of pet owners retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/definitions/PetOwnerResponse"
      tags:
        - Users
    post:
      summary: Create a new pet owner.
      description: Create a new pet owner.
      requestBody:
        description: Pet Owner details.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/PostPetOwner"
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: "#/definitions/UserResponse"
      tags:
        - Users

  /api/users/internal-users/{id}:
    get:
      summary: Get a specific internal user by ID.
      description: Retrieve a specific internal user by their unique ID.
      parameters:
        - name: id
          in: path
          description: The ID of the internal user to retrieve.
          required: true
          type: integer
      responses:
        "200":
          description: Internal user retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/definitions/InternalUserResponse"
        "404":
          description: Internal user not found.
      tags:
        - Users
    patch:
      summary: Update a specific internal user by ID.
      description: Update the details of a specific internal user by their unique ID.
      parameters:
        - name: id
          in: path
          description: The ID of the internal user to update.
          required: true
          type: integer
      requestBody:
        description: Updated internal user details.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/PutInternalUser"
      responses:
        "200":
          description: Internal user updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/definitions/PutInternalUser"
        "404":
          description: Internal user not found.
      tags:
        - Users
    delete:
      summary: Delete a specific internal user by ID.
      description: Delete a specific internal user by their unique ID.
      parameters:
        - name: id
          in: path
          description: The ID of the internal user to delete.
          required: true
          type: integer
      responses:
        "200":
          description: Internal user deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A success message indicating the user deletion.
        "404":
          description: Internal user not found.
      tags:
        - Users

  /api/users/pet-owners/{id}:
    get:
      summary: Get a specific pet owner by ID.
      description: Retrieve a pet owner by their unique ID.
      parameters:
        - name: id
          in: path
          description: The ID of the pet owner to retrieve.
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Pet owner retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/definitions/PetOwnerResponse"
        "404":
          description: Pet owner not found.
      tags:
        - Users
    patch:
      summary: Update a specific pet owner by ID.
      description: Update the details of a specific pet owner by their unique ID.
      parameters:
        - name: id
          in: path
          description: The ID of the pet owner to update.
          required: true
          type: integer
      requestBody:
        description: Updated pet owner details.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/PutPetOwner"
      responses:
        "200":
          description: Pet owner updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/definitions/PutPetOwner"
        "404":
          description: Pet owner not found.
      tags:
        - Users
    delete:
      summary: Delete a specific pet owner by ID.
      description: Delete a specific pet owner by their unique ID.
      parameters:
        - name: id
          in: path
          description: The ID of the pet owner to delete.
          required: true
          type: integer
      responses:
        "200":
          description: Pet owner deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A success message indicating the user deletion.
        "404":
          description: Pet owner not found.
      tags:
        - Users

  /api/users/pet-businesses/{id}:
    get:
      summary: Get a specific pet business by ID.
      description: Retrieve a pet business by its unique ID.
      parameters:
        - name: id
          in: path
          description: The ID of the pet business to retrieve.
          required: true
          type: integer
      responses:
        "200":
          description: Pet business retrieved successfully.
          content:
            application/json:
              schema:
                $ref: "#/definitions/PetBusinessResponse"
        "404":
          description: Pet business not found.
      tags:
        - Users
    patch:
      summary: Update a specific pet business by ID.
      description: Update the details of a specific pet business by their unique ID.
      parameters:
        - name: id
          in: path
          description: The ID of the pet business to update.
          required: true
          type: integer
      requestBody:
        description: Updated pet business details.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/PutPetBusiness"
      responses:
        "200":
          description: Pet business updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/definitions/PutPetBusiness"
        "404":
          description: Pet business not found.
      tags:
        - Users
    delete:
      summary: Delete a specific pet business by ID.
      description: Delete a specific pet business by their unique ID.
      parameters:
        - name: id
          in: path
          description: The ID of the pet business to delete.
          required: true
          type: integer
      responses:
        "200":
          description: Pet business deleted successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: A success message indicating the user deletion.
        "404":
          description: Pet business not found.
      tags:
        - Users

  /api/users/forget-password:
    post:
      summary: User forgets password and wants to reset it.
      description: Sends a reset password link to the email.
      requestBody:
        description: Email details.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/post-forget-password"
      responses:
        "201":
          description: Forget password email sent successfully.
          content:
            application/json:
              schema:
                $ref: "#/definitions/post-forget-password-response"
      tags:
        - Users

  /api/users/reset-password/{token}:
    post:
      summary: Reset user password using a reset password token.
      description: Resets the password for the user.
      parameters:
        - name: token
          in: path
          description: Token of the reset-password record.
          required: true
          type: string
      requestBody:
        description: New password details.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/post-reset-password-with-token"
      responses:
        "201":
          description: Reset password successful.
          content:
            application/json:
              schema:
                $ref: "#/definitions/post-reset-password-response"
      tags:
        - Users

  /api/users/change-password:
    post:
      summary: User wants to change their password.
      description: Change password for user.
      requestBody:
        description: Authorization details and new password.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/post-change-password"
      responses:
        "201":
          description: Change password successful.
          content:
            application/json:
              schema:
                $ref: "#/definitions/post-change-password-response"
      tags:
        - Users

  /api/users/{id}/activate-user:
    patch:
      summary: User wants to activate their account.
      description: Activate user account.
      parameters:
        - name: id
          in: path
          description: ID of the user to activate.
          required: true
          type: integer
      requestBody:
        description: Authorization details.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/patch-de-activate-user"
      responses:
        "200":
          description: User activated successfully.
          content:
            application/json:
              schema:
                $ref: "#/definitions/UserResponse"
      tags:
        - Users

  /api/users/{id}/deactivate-user:
    patch:
      summary: User wants to deactivate their account.
      description: Deactivate user account.
      parameters:
        - name: id
          in: path
          description: ID of the user to deactivate.
          required: true
          type: integer
      requestBody:
        description: Authorization details.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/definitions/patch-de-activate-user"
      responses:
        "200":
          description: User deactivated successfully.
          content:
            application/json:
              schema:
                $ref: "#/definitions/UserResponse"
      tags:
        - Users

  /api/users/pet-owners/add-to-favourites/{id}:
    post:
      summary: Add a service listing to a pet owner's favorites.
      description: Adds a specified service listing to the favorites of a pet owner with the given ID.
      parameters:
        - name: id
          in: path
          description: "ID of the pet owner"
          required: true
          type: integer
      requestBody:
        description: Service Listing ID to add to favourites
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serviceListingId:
                  type: integer
                  description: "ID of the service listing to add to favorites"
      responses:
        200:
          description: Service listing added to favorites successfully.
          content:
            application/json:
              schema:
                $ref: '#/definitions/PetOwnerWithFavouritesResponse'
      tags:
        - Users

  /api/users/pet-owners/remove-from-favourites/{id}:
    post:
      summary: Remove a service listing from a pet owner's favorites.
      description: Removes a specified service listing from the favorites of a pet owner with the given ID.
      parameters:
        - name: id
          in: path
          description: "ID of the pet owner"
          required: true
          type: integer
      requestBody:
        description: Service Listing ID to remove from favourites
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                serviceListingId:
                  type: integer
                  description: "ID of the service listing to remove from favorites"
      responses:
        200:
          description: Service listing removed from favourites successfully.
          content:
            application/json:
              schema:
                $ref: '#/definitions/PetOwnerWithFavouritesResponse'
          
      tags:
        - Users

  /api/users/pet-owners/favourites/{id}:
    get:
      summary: Retrieve a pet owner's favorite service listings.
      description: Retrieves the list of favorite service listings for a pet owner with the given ID.
      parameters:
        - name: id
          in: path
          description: "ID of the pet owner"
          required: true
          type: integer
      responses:
        200:
          description: Successful response containing an array of favorite service listings.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/definitions/FavoriteServiceListing"
        # Add other response codes and descriptions as needed
      tags:
        - Users
